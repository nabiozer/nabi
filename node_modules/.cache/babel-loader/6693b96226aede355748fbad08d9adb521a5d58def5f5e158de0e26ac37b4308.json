{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useForm as useHookForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nconst yupValidation = validItems => {\n  const schema = yup.object().shape(validItems);\n  return yupResolver(schema);\n};\nconst useForm = _ref => {\n  _s();\n  let {\n    defaultValues,\n    validationSchema\n  } = _ref;\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    resetField,\n    setValue,\n    watch,\n    getValues,\n    clearErrors,\n    reset,\n    setError,\n    setFocus,\n    trigger\n  } = useHookForm({\n    defaultValues: {\n      ...defaultValues\n    },\n    resolver: yupValidation({\n      ...validationSchema\n    }),\n    reValidateMode: 'onChange',\n    mode: 'onBlur'\n  });\n  const setFieldError = (fieldName, errorMsg) => {\n    setError(fieldName, {\n      type: 'manual',\n      message: errorMsg\n    });\n  };\n  return {\n    control,\n    errors,\n    handleSubmit,\n    setValue,\n    watch,\n    getValues,\n    clearErrors,\n    reset,\n    resetField,\n    setError,\n    setFieldError,\n    setFocus,\n    trigger\n  };\n};\n_s(useForm, \"+nLhNC5fW28j+KRKvyIrsnx7XSA=\", false, function () {\n  return [useHookForm];\n});\nexport default useForm;","map":{"version":3,"names":["useForm","useHookForm","yup","yupResolver","yupValidation","validItems","schema","object","shape","_ref","_s","defaultValues","validationSchema","control","handleSubmit","formState","errors","resetField","setValue","watch","getValues","clearErrors","reset","setError","setFocus","trigger","resolver","reValidateMode","mode","setFieldError","fieldName","errorMsg","type","message"],"sources":["/Users/nabiozer/Desktop/nabiozer/src/_common/_hooks/useForm.ts"],"sourcesContent":["import {useForm as useHookForm} from 'react-hook-form'\nimport * as yup from 'yup';\nimport {yupResolver} from '@hookform/resolvers/yup';\ninterface IProps {\n    defaultValues: any;\n    validationSchema:any;\n}\n\n\nconst yupValidation = (validItems:any) => {\n    const schema = yup.object().shape(validItems);\n    return yupResolver(schema);\n}\n\n\nconst useForm = ({defaultValues,validationSchema}:IProps) => {\n    const {\n        control,\n        handleSubmit,\n        formState:{ errors },\n        resetField,\n        setValue,\n        watch,\n        getValues,\n        clearErrors,\n        reset,\n        setError,\n        setFocus,\n        trigger,\n    } = useHookForm({\n        defaultValues: {...defaultValues},\n        resolver:yupValidation({...validationSchema}),\n        reValidateMode:'onChange',\n        mode:'onBlur'\n    });\n\n    const setFieldError = (fieldName:string,errorMsg:string) => {\n        setError(fieldName,{\n            type:'manual',\n            message:errorMsg,\n        })\n    };\n\n    return {\n        control,\n        errors,\n        handleSubmit,\n        setValue,\n        watch,\n        getValues,\n        clearErrors,\n        reset,\n        resetField,\n        setError,\n        setFieldError,\n        setFocus,\n        trigger,\n    };\n};\n\nexport default useForm"],"mappings":";AAAA,SAAQA,OAAO,IAAIC,WAAW,QAAO,iBAAiB;AACtD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAAQC,WAAW,QAAO,yBAAyB;AAOnD,MAAMC,aAAa,GAAIC,UAAc,IAAK;EACtC,MAAMC,MAAM,GAAGJ,GAAG,CAACK,MAAM,EAAE,CAACC,KAAK,CAACH,UAAU,CAAC;EAC7C,OAAOF,WAAW,CAACG,MAAM,CAAC;AAC9B,CAAC;AAGD,MAAMN,OAAO,GAAGS,IAAA,IAA6C;EAAAC,EAAA;EAAA,IAA5C;IAACC,aAAa;IAACC;EAAuB,CAAC,GAAAH,IAAA;EACpD,MAAM;IACFI,OAAO;IACPC,YAAY;IACZC,SAAS,EAAC;MAAEC;IAAO,CAAC;IACpBC,UAAU;IACVC,QAAQ;IACRC,KAAK;IACLC,SAAS;IACTC,WAAW;IACXC,KAAK;IACLC,QAAQ;IACRC,QAAQ;IACRC;EACJ,CAAC,GAAGxB,WAAW,CAAC;IACZU,aAAa,EAAE;MAAC,GAAGA;IAAa,CAAC;IACjCe,QAAQ,EAACtB,aAAa,CAAC;MAAC,GAAGQ;IAAgB,CAAC,CAAC;IAC7Ce,cAAc,EAAC,UAAU;IACzBC,IAAI,EAAC;EACT,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAGA,CAACC,SAAgB,EAACC,QAAe,KAAK;IACxDR,QAAQ,CAACO,SAAS,EAAC;MACfE,IAAI,EAAC,QAAQ;MACbC,OAAO,EAACF;IACZ,CAAC,CAAC;EACN,CAAC;EAED,OAAO;IACHlB,OAAO;IACPG,MAAM;IACNF,YAAY;IACZI,QAAQ;IACRC,KAAK;IACLC,SAAS;IACTC,WAAW;IACXC,KAAK;IACLL,UAAU;IACVM,QAAQ;IACRM,aAAa;IACbL,QAAQ;IACRC;EACJ,CAAC;AACL,CAAC;AAACf,EAAA,CA3CIV,OAAO;EAAA,QAcLC,WAAW;AAAA;AA+BnB,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}